AWSTemplateFormatVersion: "2010-09-09"
Description: "vpc stack: creates vpc, subnets, igw, nat gw, route tables"

Parameters:
  vpcCIDR:
    Type: String
    Default: 10.0.0.0/16
  publicSubnet1CIDR:
    Type: String
    Default: 10.0.1.0/24
  publicSubnet2CIDR:
    Type: String
    Default: 10.0.2.0/24
  privateSubnet1CIDR:
    Type: String
    Default: 10.0.3.0/24
  privateSubnet2CIDR:
    Type: String
    Default: 10.0.4.0/24

  project:
    Type: String
    Default: mane
  environment:
    Type: String
    Default: dev
  owner:
    Type: String
    Default: sachin

  region:
    Type: String
    Default: ap-south-1
    AllowedValues:
      - ap-south-1
      - us-east-1
      - us-west-1
      - eu-west-1

  availabilityZone1:
    Type: String
    Default: ap-south-1a
  availabilityZone2:
    Type: String
    Default: ap-south-1b

Mappings: {}
Conditions: {}

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Networking Configuration"
        Parameters:
          - vpcCIDR
          - publicSubnet1CIDR
          - publicSubnet2CIDR
          - privateSubnet1CIDR
          - privateSubnet2CIDR
      - Label:
          default: "Deployment Settings"
        Parameters:
          - project
          - environment
          - owner
          - region
          - availabilityZone1
          - availabilityZone2

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref vpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${project}-vpc"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref environment
        - Key: owner
          Value: !Ref owner

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${project}-igw"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref environment
        - Key: owner
          Value: !Ref owner

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref publicSubnet1CIDR
      AvailabilityZone: !Ref availabilityZone1
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${project}-public-subnet1"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref environment
        - Key: owner
          Value: !Ref owner

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref publicSubnet2CIDR
      AvailabilityZone: !Ref availabilityZone2
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${project}-public-subnet2"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref environment
        - Key: owner
          Value: !Ref owner

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref privateSubnet1CIDR
      AvailabilityZone: !Ref availabilityZone1
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${project}-private-subnet1"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref environment
        - Key: owner
          Value: !Ref owner

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref privateSubnet2CIDR
      AvailabilityZone: !Ref availabilityZone2
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${project}-private-subnet2"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref environment
        - Key: owner
          Value: !Ref owner

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub "${project}-nat-eip"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref environment
        - Key: owner
          Value: !Ref owner

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub "${project}-nat-gw"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref environment
        - Key: owner
          Value: !Ref owner

  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${project}-public-rt"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref environment
        - Key: owner
          Value: !Ref owner

  RoutePublic:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref PublicSubnet2

  RouteTablePrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${project}-private-rt"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref environment
        - Key: owner
          Value: !Ref owner

  RoutePrivate:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateSubnet1RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivate
      SubnetId: !Ref PrivateSubnet2

Outputs:
  vpcId:
    Value: !Ref VPC
    Export:
      Name: !Sub "${project}-${environment}-vpc-id"

  publicSubnet1Id:
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${project}-${environment}-public-subnet1-id"

  publicSubnet2Id:
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${project}-${environment}-public-subnet2-id"

  privateSubnet1Id:
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${project}-${environment}-private-subnet1-id"

  privateSubnet2Id:
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${project}-${environment}-private-subnet2-id"
